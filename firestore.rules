
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Public collections can be read by anyone
    match /communities/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.creatorId);
    }
     match /federated_entities/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.creatorId);
    }
     match /political_parties/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.creatorId);
    }
     match /study_groups/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.creatorId);
    }
     match /chat_groups/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.creatorId);
    }
     match /events/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.creatorId);
    }

    // Posts and proposals can be read by anyone
     match /posts/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.authorId);
    }
     match /proposals/{docId} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAuthenticated() && isOwner(resource.data.authorId);
    }

    // User profiles are public, but can only be created/updated by their owner
    match /users/{userId} {
      allow read: if true;
      allow create, update: if isAuthenticated() && isOwner(userId);
      allow delete: if false; // Generally, don't allow users to delete their own profiles
    }

    // Comments can be read by anyone, created by authenticated users, and deleted by their author.
    match /{collection}/{docId}/comments/{commentId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && isOwner(resource.data.author.uid);
    }
  }
}

    