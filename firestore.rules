
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can only read and write to their own user document.
    // Public profiles are handled by allowing anyone to read.
    match /users/{userId} {
      allow read;
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Public collections that anyone can read.
    match /{collection}/{docId} where collection in ['communities', 'federated_entities', 'political_parties', 'study_groups', 'chat_groups', 'events', 'proposals', 'posts', 'tutorials', 'cultural_posts'] {
      allow read;
      allow create: if request.auth != null;
      // Updates are more complex (joining, liking, voting). 
      // We'll allow any authenticated user to update for now, 
      // with more granular logic handled client-side or in cloud functions.
      allow update: if request.auth != null;
    }
    
    // Comments on posts or proposals
    match /{collection}/{docId}/comments/{commentId} where collection in ['posts', 'proposals'] {
        allow read;
        allow create: if request.auth != null;
        allow update: if request.auth != null; // For liking comments, etc.
    }

  }
}
