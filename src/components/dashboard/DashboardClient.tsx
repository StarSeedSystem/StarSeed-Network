
"use client";

import { useState } from "react";
import { cn } from "@/lib/utils";
import { FeedWidget, FeedPostType } from "@/components/dashboard/FeedWidget";
import { AchievementsWidget } from "@/components/dashboard/AchievementsWidget";
import { TutorialsWidget } from "@/components/dashboard/TutorialsWidget";
import { PoliticalSummaryWidget } from "@/components/dashboard/PoliticalSummaryWidget";
import { ProjectsWidget } from "@/components/dashboard/ProjectsWidget";
import { LearningPathWidget } from "@/components/dashboard/LearningPathWidget";
import { DashboardHeader } from "@/components/dashboard/DashboardHeader";

interface DashboardClientProps {
    initialFeed: FeedPostType[];
}

const followingFeed: FeedPostType[] = [
    {
        id: "post_3",
        author: "Helios",
        handle: "helios.tez",
        avatar: "https://placehold.co/100x100.png",
        avatarHint: "sun god",
        title: "Nuevo paper sobre redes energéticas",
        content: "Just published a new paper on decentralized energy grids. The future is bright and powered by the community. #solarpunk #sustainability",
        comments: 25,
        reposts: 15,
        likes: 120,
        destinations: [{id: "dest_profile_helios", name: "Profile", type: "profile"}]
    }
];

const communitiesFeed: FeedPostType[] = [
    {
        id: "post_4",
        author: "Art-AI Collective",
        handle: "art-ai.dao",
        avatar: "https://placehold.co/100x100.png",
        avatarHint: "abstract art",
        title: "Exhibición 'Cyberdelic Dreams' ya abierta",
        content: "Our new collaborative exhibition, 'Cyberdelic Dreams', is now open in the virtual gallery. Come and experience art generated by collective consciousness. #aiart #community",
        comments: 50,
        reposts: 30,
        likes: 250,
        destinations: [{id: "dest_art_ai", name: "Arte Ciberdélico", type: "community"}]
    }
];

export function DashboardClient({ initialFeed }: DashboardClientProps) {
    const [isEditing, setIsEditing] = useState(false);

    const widgetClasses = cn(
        "transition-all duration-300",
        isEditing && "ring-2 ring-dashed ring-primary/50"
    );

    const feedData = {
        all: initialFeed,
        following: followingFeed,
        communities: communitiesFeed,
    };

    return (
        <div className="space-y-8">
            <DashboardHeader isEditing={isEditing} onEditToggle={setIsEditing} />
            <div className="flex flex-col lg:flex-row gap-8">
                {/* Columna Izquierda */}
                <div className="w-full lg:w-1/4 space-y-8">
                    <div className={widgetClasses}><PoliticalSummaryWidget /></div>
                    <div className={widgetClasses}><AchievementsWidget /></div>
                    <div className={widgetClasses}><TutorialsWidget /></div>
                </div>

                {/* Columna Central (Principal) */}
                <div className="w-full lg:w-1/2 space-y-8">
                    <div className={widgetClasses}>
                        <FeedWidget 
                            feeds={feedData}
                        />
                    </div>
                </div>

                {/* Columna Derecha */}
                <div className="w-full lg:w-1/4 space-y-8">
                     <div className={widgetClasses}><ProjectsWidget /></div>
                     <div className={widgetClasses}><LearningPathWidget /></div>
                </div>
            </div>
        </div>
    );
}
